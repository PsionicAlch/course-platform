{{ template "base" .}}

{{ define "meta-tags" }}
  <meta name="robots" content="index, follow" />

  <link rel="canonical" href="https://www.psionicalch.com/tutorials/{{- .Tutorial.Slug -}}" />

  <link rel="alternate" type="application/rss+xml" title="RSS Feed for {{ .Tutorial.Title }}" href="https://www.psionicalch.com/rss/tutorials/{{- .Tutorial.Slug -}}" />

  <meta name="description" content="{{- .Tutorial.Description -}} Learn how to master this aspect of Golang development with step-by-step instructions and practical examples by PsionicAlch." />
  <meta name="keywords" content="{{- range .Keywords -}} {{- . -}}, {{- end -}} Golang Courses, Golang Tutorials, Golang Programming, Golang Projects, Learn Golang, Web Development with Go, Real-World Applications, Programming Tutorials, Programming Courses, Build Software with Go, Go Programming Language, Backend Development with Go, Golang Learning Platform, Practical Golang courses for developers, Real-world Golang application tutorials, Build software with Golang step-by-step, Complete Golang development course for beginners, Golang backend development for web apps, Step-by-step Golang tutorials for web development, Learn Go programming with real-world projects, Best Golang tutorials for intermediate developers, How to implement HTMX with Go programming, Build and deploy Golang applications tutorial, Learn AlpineJS and Golang integration, Earn discounts with affiliate programs for Golang courses, Affiliate programs for programming tutorials, Refer and earn with coding platforms, Complete Golang web development project, Get certified in Golang programming, Golang course completion certificates, Showcase Golang skills with certification, Learn Golang from scratch, Build scalable apps with Golang, Backend programming with Go, Practical Golang for real-world development, HTMX integration with Golang, Using AlpineJS with Go, Full-stack development with Golang, API development with Go, Building scalable SaaS platforms in Go" />

  <meta property="og:title" content="{{- .Tutorial.Title -}} - Learn Golang with Real-World Examples | PsionicAlch" />
  <meta property="og:description" content="{{- .Tutorial.Description -}} Learn this essential Golang skill with PsionicAlch's in-depth tutorial." />
  <meta property="og:image" content="{{- .Tutorial.BannerURL -}}" />
  <meta property="og:url" content="https://www.psionicalch.com/tutorials/{{- .Tutorial.Slug -}}" />
  <meta property="og:type" content="article" />
  <meta property="og:site_name" content="PsionicAlch" />

  <meta name="twitter:card" content="summary_large_image" />
  <meta name="twitter:site" content="@psionicalch" />
  <meta name="twitter:title" content="{{- .Tutorial.Title -}} - Learn Golang with Real-World Examples | PsionicAlch" />
  <meta name="twitter:description" content="{{- .Tutorial.Description -}} Learn Golang skills with practical, real-world examples." />
  <meta name="twitter:image" content="{{- .Tutorial.BannerURL -}}" />

  <script type="application/ld+json">
    {
      "@context": "https://schema.org",
      "@type": "Article",
      "headline": "{{- .Tutorial.Title -}}",
      "description": "{{- .Tutorial.Description -}}",
      "image": "{{- .Tutorial.BannerURL -}}",
      "author": {
        "@type": "Person",
        "name": "{{- .Author.Name -}} {{- .Author.Surname -}}"
      },
      "datePublished": "{{- .Tutorial.UpdatedAt | pretty_date -}}",
      "mainEntityOfPage": "https://www.psionicalch.com/tutorials/{{- .Tutorial.Slug -}}",
      "publisher": {
        "@type": "Organization",
        "name": "PsionicAlch",
        "logo": {
          "@type": "ImageObject",
          <!-- TODO: Set up logo URL -->
          "url": "https://www.psionicalch.com/static/images/psionicalch_logo.png"
        }
      },
      {{ if .Course }}
      "isPartOf": {
        "@type": "Course",
        "name": "{{- .Course.Title -}}",
        "url": "https://www.psionicalch.com/courses/{{- .Course.Slug -}}"
      }
      {{ end }}
    }
  </script>

{{ end }}

{{ define "stylesheets" }}
  <link rel="stylesheet" href="/assets/css/article.css">
  <link rel="stylesheet" href="/assets/css/tutorial.css">
  <link rel="stylesheet" href="/assets/css/comments.css">
  <link rel="stylesheet" href="/assets/css/atom-one-light.min.css">
{{ end }}

{{ define "head-scripts" }}
  <script src="/assets/js/highlight.min.js" defer></script>
  <script src="/assets/js/apache.min.js" defer></script>
  <script src="/assets/js/bash.min.js" defer></script>
  <script src="/assets/js/css.min.js" defer></script>
  <script src="/assets/js/dockerfile.min.js" defer></script>
  <script src="/assets/js/go.min.js" defer></script>
  <script src="/assets/js/http.min.js" defer></script>
  <script src="/assets/js/javascript.min.js" defer></script>
  <script src="/assets/js/json.min.js" defer></script>
  <script src="/assets/js/makefile.min.js" defer></script>
  <script src="/assets/js/markdown.min.js" defer></script>
  <script src="/assets/js/nginx.min.js" defer></script>
  <script src="/assets/js/shell.min.js" defer></script>
  <script src="/assets/js/sql.min.js" defer></script>
  <script src="/assets/js/yaml.min.js" defer></script>
{{ end }}

{{ define "title" }}
  <title>{{- .Tutorial.Title -}} - Learn Golang with Real-World Examples | PsionicAlch</title>
{{ end }}

{{ define "body" }}
  <main>
    <section class="container">
      <div class="tutorial-container">
        <div class="tutorial-header">
          <div>
            <h1>{{- .Tutorial.Title -}}</h1>

            <p>Written by <a href="/authors/{{- .Author.Slug -}}/tutorials">{{- .Author.Name -}} {{- .Author.Surname -}}</a></p>
          </div>

          {{ if .User }}
            <div class="tutorial-actions">
              <div>
                <button
                  hx-post="/tutorials/{{- .Tutorial.Slug -}}/like"
                  aria-label="Like Tutorial"
                >
                  {{ if .TutorialLiked }}
                    {{ template "heart-filled" }}
                  {{ else }}
                    {{ template "heart-empty" }}
                  {{ end }}
                </button>

                <button
                  hx-post="/tutorials/{{- .Tutorial.Slug -}}/bookmark"
                  aria-label="Bookmark Tutorial"
                  class="bookmark"
                >
                  {{ if .TutorialBookmarked }}
                    {{ template "bookmark-filled" }}
                  {{ else }}
                    {{ template "bookmark-empty"}}
                  {{ end }}
                </button>
              </div>
            </div>
          {{ end }}
        </div>

        <div class="tutorial-content article-content">
          <img src="{{- .Tutorial.BannerURL -}}" alt="Article's banner image" class="banner-img">

          {{ html .Tutorial.Content }}
        </div>
      </div>
    </section>
  </main>

  {{ if or .User .Comments.Comments }}
    <section class="comment-section">
      <div class="container">
        <div class="comments-container shadow-sm">
          {{ if .User }}
            <div class="comments-header">
              <form
                hx-post="/tutorials/{{- .Tutorial.Slug -}}/comments"
                hx-target=".comments-body"
                hx-swap="afterbegin"
                hx-on:submit="document.getElementById('comment').value = ''"
              >
                <textarea name="comment" id="comment" placeholder="Why not leave your thoughts?" rows="5"></textarea>

                <button type="submit" class="btn btn-blue shadow-sm">Comment</button>
              </form>
            </div>

            <hr>
          {{ end }}

          <div class="comments-body">
            {{ if .Comments.Comments }}
              {{ template "comments-list" .Comments }}
            {{ end }}
          </div>
        </div>
      </div>
    </section>
  {{ end }}
{{ end }}

{{ define "javascript" }}
  <script>
    document.addEventListener("DOMContentLoaded", () => {
      hljs.highlightAll();
    });
  </script>
{{ end }}
