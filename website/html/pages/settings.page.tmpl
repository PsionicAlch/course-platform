{{ template "base" .}}

{{ define "stylesheets" }}
  <link rel="stylesheet" href="/assets/css/settings.css">
{{ end }}

{{ define "title" }}
  <title>Settings | PsionicAlch</title>
{{ end }}

{{ define "body" }}
  <main class="settings">
    <div class="container">
      <section id="change-first-name" class="settings-container">
        <h2>Change My First Name</h2>

        {{ template "change-first-name-form" .ChangeFirstNameForm }}
      </section>

      <hr>

      <section id="change-last-name" class="settings-container">
        <h2>Change My Last Name</h2>

        {{ template "change-last-name-form" .ChangeLastNameForm }}
      </section>

      <hr>

      <section id="change-email" class="settings-container">
        <h2>Change My Email Address</h2>

        {{ template "change-email-form" .ChangeEmailForm }}
      </section>

      <hr>

      <section id="change-password" class="settings-container">
        <h2>Change My Password</h2>

        {{ template "change-password-form" .ChangePasswordForm }}
      </section>

      <hr>

      <section class="settings-container" id="manage-ip-addresses">
        <h2>Manage Whitelisted IP Addresses</h2>

        <div class="ip-addresses-container">
          {{ range .IPAddresses }}
            <div class="ip-address shadow-sm">
              <p><b>{{- .IPAddress -}}</b></p>

              <button class="btn btn-red shadow-sm" hx-delete="/settings/delete-ip-address/{{- .ID -}}">Delete IP Address</button>
            </div>
          {{ else }}
            <p>You don't currently have any whitelisted IP addresses</p>
          {{ end }}
        </div>
      </section>

      <hr>

      <section class="settings-container" x-data="usercourses" id="request-refund">
        <h2>Request Refund</h2>

        <p>Once a refund request has been successfully processed you will no longer have access to that specific course. Only courses that you have bought less than 30 days ago and have yet to complete are viable for a refund. Any refund requests for a course that doesn't meet these criteria will be denied. Please see our <a href="/refund-policy.html" class="emphasis">Refund Policy</a> for more information.</p>

        <select name="courses" id="courses" x-model="courseID" x-effect="setCourseName(courseID)" class="shadow-sm">
          <option value="" disabled>Select a course</option>

          <template x-for="(value, key) in courses">
            <option x-bind:value="key" x-text="value"></option>
          </template>
        </select>

        <button class="btn btn-blue shadow-sm" x-on:click="modalOpen = true" x-bind:disabled="!courseID && !courseName">Request Refund</button>

        <template x-teleport="body">
          <section
            class="delete-modal"
            x-bind:class="{ 'closed': !modalOpen, 'open': modalOpen }"
          >
            <div class="modal-container">
              <h2>Are you sure you want to request a refund for this course?</h2>

              <p>Your are about to request a refund for <b x-text="courseName"></b>. Once this refund has been successfully processed you will no longer have access to this course and you will lose all of your progress related to this course. Are you sure you want to do this?</p>

              <hr>

              <div class="modal-actions">
                <button x-on:click="cancel()" class="btn btn-gray shadow-sm">Cancel</button>
                <button x-on:click="submit()" class="btn btn-red shadow-sm" id="request-refund-btn">Request Refund</button>
              </div>
            </div>
          </section>
        </template>
      </section>

      <hr>

      <section
        x-data="{ modalOpen: false }"
        class="settings-container danger"
        id="delete-account"
      >
        <h2>Delete My Account</h2>

        <p>Once you delete your account there is no going back. We will delete all your user data so you won't have access to any of the courses you bought.</p>

        <button class="btn btn-red shadow-sm" x-on:click="modalOpen = true">Delete Account</button>

        <template x-teleport="body">
          <section
            class="delete-modal"
            x-bind:class="{ 'closed': !modalOpen, 'open': modalOpen }"
          >
            <div class="modal-container">
              <h2>Are you sure you want to delete your account?</h2>

              <p>Your account is about to be permanently deleted. There is no going back after this. We will delete all of your user data so you will no longer have any access to the courses you have purchased. You will not be entitled to a refund on any of the courses you have purchased.</p>

              <hr>

              <div class="modal-actions">
                <button x-on:click="modalOpen = false" class="btn btn-gray shadow-sm">Cancel</button>
                <button class="btn btn-red shadow-sm" hx-delete="/settings/delete-account">Delete My Account</button>
              </div>
            </div>
          </section>
        </template>
      </section>
    </div>
  </main>
{{ end }}

{{ define "javascript" }}
  <script>
    document.addEventListener("alpine:init", () => {
      Alpine.data('usercourses', () => ({
        courses: {
          {{- range .Courses }}
            "{{- .ID -}}": "{{- .Title -}}",
          {{ end -}}
        },
        courseID: "",
        courseName: "",
        modalOpen: false,

        setCourseName(id) {
          if (id && id in this.courses) {
            this.courseName = this.courses[id];
          }
        },

        cancel() {
          this.modalOpen = false;
          this.courseID = '';
          this.courseName = ''
        },

        async submit() {
          const refundURL = `/settings/request-refund/${this.courseID}`;
          const refundBtn = document.getElementById("request-refund-btn");

          try {
            refundBtn.innerText = "Requesting...";

            const response = await fetch(refundURL, { method: "post" });
            if (!response.ok) {
              throw new Error(`Response status: ${response.status}`);
            }
          } catch (_) {
          }

          location.reload();
        }
      }));
    });
  </script>
{{ end }}
